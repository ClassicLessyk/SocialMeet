{"ast":null,"code":"import * as api from '../api';\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n  } catch (error) {}\n};","map":{"version":3,"names":["api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post","updatePost","id","deletePost"],"sources":["C:/Kursova_prject/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n        dispatch({ type: 'FETCH_ALL', payload: data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n\r\n\r\n    \r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.createPost(post);\r\n\r\n        dispatch({ type: 'CREATE', payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n\r\n        dispatch( {type: 'UPDATE', payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n    } catch (error) {\r\n        \r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,UAAU,EAAE;IACvCF,QAAQ,CAAC;MAAEG,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AAIJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK,MAAOV,QAAQ,IAAK;EACpD,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACW,UAAU,CAACC,IAAI,CAAC;IAEzCV,QAAQ,CAAC;MAAEG,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,CAACC,EAAE,EAAEF,IAAI,KAAK,MAAOV,QAAQ,IAAK;EACxD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACa,UAAU,CAACC,EAAE,EAAEF,IAAI,CAAC;IAE/CV,QAAQ,CAAE;MAACG,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AAEJ,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAID,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EAClD,IAAI;IACA,MAAMF,GAAG,CAACe,UAAU,CAACD,EAAE,CAAC;EAC5B,CAAC,CAAC,OAAOP,KAAK,EAAE,CAEhB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}